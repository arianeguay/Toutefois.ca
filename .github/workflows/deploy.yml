# .github/workflows/deploy.yml
name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - "wp-content/**"
      - "nginx/**"
      - ".github/workflows/deploy.yml"

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      wordpress: ${{ steps.filter.outputs.wordpress }}
      nginx: ${{ steps.filter.outputs.nginx }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            frontend:
              - 'frontend/**'
            wordpress:
              - 'wp-content/**'
            nginx:
              - 'nginx/**'
            deploy:
              - '.github/workflows/deploy.yml'

  build-frontend:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.frontend == 'true' || needs.filter.outputs.deploy == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install and Build Frontend
        run: |
          cd frontend
          yarn install
          yarn build
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [filter, build-frontend]
    if: always() && (needs.filter.outputs.frontend == 'true' || needs.filter.outputs.wordpress == 'true' || needs.filter.outputs.nginx == 'true' || needs.filter.outputs.deploy == 'true')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download frontend artifact
        if: needs.filter.outputs.frontend == 'true'
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: frontend/dist/
      - name: Deploy files via rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: "./"
          remote_path: "/var/www/toutefois_app"
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

  configure-server:
    runs-on: ubuntu-latest
    needs: [filter, deploy]
    if: always() && (needs.filter.outputs.nginx == 'true' || needs.filter.outputs.deploy == 'true')
    steps:
      - name: Setup Server, SSL, and Reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Moving Nginx configs..."
            sudo mv /var/www/toutefois_app/nginx/sites-available/*.conf /etc/nginx/sites-available/

            echo "Creating symlinks..."
            sudo ln -sf /etc/nginx/sites-available/toutefois.ca.conf /etc/nginx/sites-enabled/toutefois.ca.conf
            sudo ln -sf /etc/nginx/sites-available/toutefois.arianeguay.ca.conf /etc/nginx/sites-enabled/toutefois.arianeguay.ca.conf
            sudo ln -sf /etc/nginx/sites-available/admin.toutefois.ca.conf /etc/nginx/sites-enabled/admin.toutefois.ca.conf
            sudo ln -sf /etc/nginx/sites-available/admin.toutefois.arianeguay.ca.conf /etc/nginx/sites-enabled/admin.toutefois.arianeguay.ca.conf

            echo "Installing Certbot and DigitalOcean Plugin..."
            if ! command -v certbot &> /dev/null; then
              sudo snap install --classic certbot
              sudo ln -s /snap/bin/certbot /usr/bin/certbot
            fi
            sudo snap install certbot-dns-digitalocean
            echo "Connecting Certbot DNS plugin..."
            sudo snap set certbot trust-plugin-with-root=ok
            sudo snap connect certbot-dns-digitalocean:plugin certbot:plugin

            echo "Requesting SSL certificate..."
            sudo certbot certonly --dns-digitalocean --dns-digitalocean-credentials /etc/letsencrypt/digitalocean.ini \
              -d toutefois.ca -d *.toutefois.ca \
              -d toutefois.arianeguay.ca -d *.toutefois.arianeguay.ca \
              --non-interactive --agree-tos -m ${{ secrets.CERTBOT_EMAIL }}

            echo "Testing Nginx configuration..."
            sudo nginx -t

            echo "Reloading Nginx..."
            sudo systemctl reload nginx
