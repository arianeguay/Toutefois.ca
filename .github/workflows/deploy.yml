# .github/workflows/deploy.yml
name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
    paths:
      - "frontend/**"
      - "wp-content/**"
      - "nginx/**"
      - ".github/workflows/deploy.yml"

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install and Build Frontend
        run: |
          cd frontend
          yarn install
          yarn build
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
      - name: Deploy WordPress files
        run: |
          echo "Setting up WordPress..."
          sudo rsync -avz --delete wp-content/plugins/toutefois /var/www/wordpress/wp-content/plugins/toutefois/
          sudo rsync -avz --delete wp-content/themes/api-placeholder-theme /var/www/wordpress/wp-content/themes/api-placeholder-theme/

          echo "Setting WordPress file permissions..."
          sudo find /var/www/wordpress/wp-content -type d -exec chmod 755 {} \;
          sudo find /var/www/wordpress/wp-content -type f -exec chmod 644 {} \;
          sudo chown -R www-data:www-data /var/www/wordpress/wp-content
      - name: Deploy files via rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: "./"
          remote_path: "/var/www/toutefois_app"
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

  configure-server:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Setup Server, SSL, and Reload Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Moving Nginx configs..."
            sudo mv /var/www/toutefois_app/nginx/sites-available/*.conf /etc/nginx/sites-available/

            echo "Creating symlinks..."
            sudo ln -sf /etc/nginx/sites-available/toutefois.arianeguay.ca.conf /etc/nginx/sites-enabled/toutefois.arianeguay.ca.conf
            sudo ln -sf /etc/nginx/sites-available/admin.toutefois.arianeguay.ca.conf /etc/nginx/sites-enabled/admin.toutefois.arianeguay.ca.conf

            echo "Removing old certbot versions..."
            sudo apt-get remove certbot -y || echo "Certbot not installed via apt."
            sudo snap remove certbot-dns-digitalocean || echo "certbot-dns-digitalocean not installed."

            echo "Creating DigitalOcean credentials file..."
            sudo mkdir -p /etc/letsencrypt
            echo "dns_digitalocean_token = ${{ secrets.DIGITALOCEAN_API_TOKEN }}" | sudo tee /etc/letsencrypt/digitalocean.ini > /dev/null
            sudo chmod 600 /etc/letsencrypt/digitalocean.ini

            echo "Installing Certbot and DigitalOcean Plugin..."
            sudo snap install --classic certbot
            sudo snap refresh certbot
            sudo ln -sf /snap/bin/certbot /usr/bin/certbot
            echo "Connecting Certbot DNS plugin..."
            sudo snap set certbot trust-plugin-with-root=ok
            sudo snap install certbot-dns-digitalocean
            sudo snap refresh certbot-dns-digitalocean

            echo "Requesting SSL certificate..."
            # Request certificate for primary domain and wildcard with explicit DNS validation
            sudo certbot certonly --dns-digitalocean \
              --dns-digitalocean-credentials /etc/letsencrypt/digitalocean.ini \
              --dns-digitalocean-propagation-seconds 60 \
              -d "*.arianeguay.ca" \
              --non-interactive --agree-tos -m ${{ secrets.CERTBOT_EMAIL }}

            echo "Testing Nginx configuration..."
            sudo nginx -t

            echo "Reloading Nginx..."
            sudo systemctl reload nginx
