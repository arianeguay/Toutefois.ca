{"version":3,"file":"content-carousel/index.js","mappings":"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","sources":["webpack://toutefois-blocks/./src/content-carousel/edit.js","webpack://toutefois-blocks/./src/content-carousel/save.js","webpack://toutefois-blocks/external window [\"wp\",\"blockEditor\"]","webpack://toutefois-blocks/external window [\"wp\",\"blocks\"]","webpack://toutefois-blocks/external window [\"wp\",\"components\"]","webpack://toutefois-blocks/external window [\"wp\",\"i18n\"]","webpack://toutefois-blocks/external window \"React\"","webpack://toutefois-blocks/webpack/bootstrap","webpack://toutefois-blocks/webpack/runtime/compat get default export","webpack://toutefois-blocks/webpack/runtime/define property getters","webpack://toutefois-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://toutefois-blocks/webpack/runtime/make namespace object","webpack://toutefois-blocks/./src/content-carousel/index.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { \n    useBlockProps, \n    InspectorControls \n} from '@wordpress/block-editor';\nimport { \n    PanelBody, \n    SelectControl, \n    TextControl,\n    RangeControl\n} from '@wordpress/components';\n\nexport default function Edit({ attributes, setAttributes }) {\n    const { \n        contentType,\n        title, \n        viewAllUrl, \n        viewAllText,\n        limit \n    } = attributes;\n\n    // Default titles based on content type\n    const getDefaultTitle = () => {\n        switch (contentType) {\n            case 'project':\n                return __('Nos projets', 'toutefois-blocks');\n            case 'news':\n                return __('Quoi de neuf?', 'toutefois-blocks');\n            case 'mixed':\n                return __('Contenu rÃ©cent', 'toutefois-blocks');\n            default:\n                return '';\n        }\n    };\n\n    // Default view all URL based on content type\n    const getDefaultViewAllUrl = () => {\n        switch (contentType) {\n            case 'project':\n                return '/projets';\n            case 'news':\n                return '/actualites';\n            case 'mixed':\n                return '/';\n            default:\n                return '';\n        }\n    };\n\n    // Default view all text based on content type\n    const getDefaultViewAllText = () => {\n        switch (contentType) {\n            case 'project':\n                return __('Voir tous les projets', 'toutefois-blocks');\n            case 'news':\n                return __('Voir tous les articles', 'toutefois-blocks');\n            case 'mixed':\n                return __('Voir tout', 'toutefois-blocks');\n            default:\n                return '';\n        }\n    };\n\n    // Update placeholders when content type changes\n    const handleContentTypeChange = (newContentType) => {\n        setAttributes({ \n            contentType: newContentType,\n            title: title || getDefaultTitle(),\n            viewAllUrl: viewAllUrl || getDefaultViewAllUrl(),\n            viewAllText: viewAllText || getDefaultViewAllText()\n        });\n    };\n\n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Content Carousel Settings', 'toutefois-blocks')}>\n                    <SelectControl\n                        label={__('Content Type', 'toutefois-blocks')}\n                        value={contentType}\n                        options={[\n                            { label: __('Projects', 'toutefois-blocks'), value: 'project' },\n                            { label: __('News', 'toutefois-blocks'), value: 'news' },\n                            { label: __('Mixed (Projects & News)', 'toutefois-blocks'), value: 'mixed' },\n                        ]}\n                        onChange={handleContentTypeChange}\n                    />\n                    <TextControl\n                        label={__('Title', 'toutefois-blocks')}\n                        value={title}\n                        placeholder={getDefaultTitle()}\n                        onChange={(value) => setAttributes({ title: value })}\n                    />\n                    <TextControl\n                        label={__('View All URL', 'toutefois-blocks')}\n                        value={viewAllUrl}\n                        placeholder={getDefaultViewAllUrl()}\n                        onChange={(value) => setAttributes({ viewAllUrl: value })}\n                    />\n                    <TextControl\n                        label={__('View All Text', 'toutefois-blocks')}\n                        value={viewAllText}\n                        placeholder={getDefaultViewAllText()}\n                        onChange={(value) => setAttributes({ viewAllText: value })}\n                    />\n                    <RangeControl\n                        label={__('Item Limit', 'toutefois-blocks')}\n                        value={limit}\n                        onChange={(value) => setAttributes({ limit: value })}\n                        min={1}\n                        max={20}\n                    />\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...useBlockProps()}>\n                <div className=\"wp-block-toutefois-content-carousel-placeholder\">\n                    <h3>{__('Content Carousel', 'toutefois-blocks')}</h3>\n                    <p>\n                        {contentType === 'project' && __('Displaying recent projects', 'toutefois-blocks')}\n                        {contentType === 'news' && __('Displaying recent news', 'toutefois-blocks')}\n                        {contentType === 'mixed' && __('Displaying recent projects and news', 'toutefois-blocks')}\n                    </p>\n                    <p>{__('Limit:', 'toutefois-blocks')} {limit}</p>\n                    <p>{__('Title:', 'toutefois-blocks')} {title || getDefaultTitle()}</p>\n                    <p>{__('This block will be rendered as a carousel in the frontend.', 'toutefois-blocks')}</p>\n                </div>\n            </div>\n        </>\n    );\n}\n","import { useBlockProps } from '@wordpress/block-editor';\n\nexport default function save() {\n    return null; // Use PHP render for frontend\n}\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save,\n});\n"],"names":["__","useBlockProps","InspectorControls","PanelBody","SelectControl","TextControl","RangeControl","Edit","attributes","setAttributes","contentType","title","viewAllUrl","viewAllText","limit","getDefaultTitle","getDefaultViewAllUrl","getDefaultViewAllText","handleContentTypeChange","newContentType","createElement","Fragment","label","value","options","onChange","placeholder","min","max","className","save","registerBlockType","metadata","name","edit"],"sourceRoot":""}